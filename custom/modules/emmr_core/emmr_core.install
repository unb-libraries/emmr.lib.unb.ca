<?php

use Drupal\taxonomy\Entity\Term;
use Drupal\node\Entity\Node;

/**
 * @file
 * Contains emmr_core.install.
 */

/**
 * Implements hook_install().
 */
function emmr_core_install() {
  $pub_formats = [
    'Manuscript',
    'Print',
  ];

  $item_formats = [
    'Manuscript',
    'Print',
    'Microfilm',
  ];

  $src_institutions = [
    'Dalhousie University',
    'University of New Brunswick',
  ];

  $contrib_roles = [
    'Author',
    'Compiler',
    'Other',
  ];

  $recipe_types = [
    'Agriculture',
    'Food',
    'Drink',
    'Cosmetic',
    'Household',
    'Medicine',
    'Veterinary Medicine',
    'Miscellaneous',
  ];

  addTerms('emmr_publication_formats', $pub_formats);
  addTerms('emmr_item_formats', $item_formats);
  addTerms('emmr_source_institutions', $src_institutions);
  addTerms('emmr_contributor_roles', $contrib_roles);
  addTerms('emmr_recipe_types', $recipe_types);

  // Create Sarah Creighton Wilkins Notebook page.
  $node = Node::create([
    'type' => 'page',
    'uid' => 1,
    'revision' => 0,
    'status' => TRUE,
    'promote' => 0,
    'created' => time(),
    'langcode' => 'en',
    'title' => 'Sarah Creighton Wilkins Notebook',
  ]);

  $node->set('body', [
    'value' =>
      '<div class="scw">
          <iframe allow="clipboard-write" allowfullscreen="true" sandbox="allow-top-navigation allow-top-navigation-by-user-activation allow-downloads allow-scripts allow-same-origin allow-popups allow-modals allow-popups-to-escape-sandbox" src="https://e.issuu.com/embed.html?d=scw-ebook&amp;u=unb-etc" style="position:absolute;border:none;width:100%;height:100%;left:0;right:0;top:0;bottom:0;">
          </iframe>
        </div>',
    'format' => 'unb_libraries'
  ]);

  $node->save();

  $source = '/node/' . $node->get('nid')->value;
  \Drupal::service('path.alias_storage')->save($source, '/scw', 'en');
}

/**
 * Implements hook_update_N().
 */
function emmr_core_update_8101() {
  $src_institutions = [
    'Acadia University Archives',
    'Mount Allison University Archives',
    'New Brunswick Museum Archives and Research Library',
    'Nova Scotia Archives',
    'Prince Edward Island Public Archives',
    'Provincial Archives of New Brunswick',
    'University of New Brunswick Archives and Special Collections',
  ];

  addTerms('emmr_source_institutions', $src_institutions);
}

function custom_update_8002() {
  // Get an array of all 'recipe' node ids.
  $article_nids = \Drupal::entityQuery('node')
    ->condition('type', 'emmr_recipe')
    ->accessCheck(FALSE)->execute();

  // Load all the articles.
  $articles = Node::loadMultiple($article_nids);
  foreach ($articles as $article) {
    $article->save();
  }
}

function custom_update_8003() {
  // Get an array of all 'recipe' node ids.
  $article_nids = \Drupal::entityQuery('node')
    ->condition('type', 'emmr_recipe')
    ->accessCheck(FALSE)->execute();

  // Load all the articles.
  $articles = Node::loadMultiple($article_nids);
  foreach ($articles as $article) {
    $article->save();
  }
}

function custom_update_8004() {
  // Get an array of all 'recipe' node ids.
  $article_nids = \Drupal::entityQuery('node')
    ->condition('type', 'emmr_recipe')
    ->accessCheck(FALSE)->execute();

  // Load all the articles.
  $articles = Node::loadMultiple($article_nids);
  foreach ($articles as $article) {
    $article->save();
  }
}

function addTerms($voc, $terms) {

  foreach ($terms as $term) {
    $new_term = Term::create([
      'vid' => $voc,
      'name' => $term,
    ]);

    $new_term->save();
  }
}
